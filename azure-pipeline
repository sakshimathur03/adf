trigger:
  branches:
    include:
      - main

stages:
- stage: DeployToDev
  displayName: 'Deploy to Development Environment'
  jobs:
  - job: DeployADFDev
    displayName: 'Deploy ADF ARM Template to Dev'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      persistCredentials: true

    - task: AzureCLI@2
      displayName: 'Deploy ARM Template to Dev Data Factory'
      inputs:
        azureSubscription: 'MyAzureSubscription'  # Your service connection name
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create `
            --resource-group YourDevResourceGroup `
            --template-file $(Build.SourcesDirectory)/template.json `
            --parameters $(Build.SourcesDirectory)/parameters.json

- stage: ApproveProduction
  displayName: 'Approval before Production Deployment'
  dependsOn: DeployToDev
  jobs:
  - job: ApprovalJob
    displayName: 'Manual Approval'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: ManualValidation@0
      inputs:
        notifyUsers: 'your-email@example.com'  # Replace with approver email
        instructions: 'Please approve deployment to Production environment.'
        onTimeout: 'reject'
        timeout: '43200' # 12 hours

- stage: DeployToProduction
  displayName: 'Deploy to Production Environment'
  dependsOn: ApproveProduction
  condition: succeeded()
  jobs:
  - job: DeployADFProd
    displayName: 'Deploy ADF ARM Template to Production'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      persistCredentials: true

    - task: AzureCLI@2
      displayName: 'Deploy ARM Template to Production Data Factory'
      inputs:
        azureSubscription: 'MyAzureSubscription'  # Your service connection name
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az deployment group create `
            --resource-group YourProdResourceGroup `
            --template-file $(Build.SourcesDirectory)/template.json `
            --parameters $(Build.SourcesDirectory)/parameters.json
